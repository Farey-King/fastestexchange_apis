# Generated by Django 5.2.4 on 2025-07-25 10:42

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import fastest_exchange.models
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompleteSignup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('phone_number', models.CharField(max_length=15)),
                ('country', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('residential_area_1', models.CharField(max_length=100)),
                ('residential_area_2', models.CharField(max_length=100)),
                ('area', models.CharField(max_length=100)),
                ('town_city', models.CharField(max_length=100)),
                ('occupation', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CreatePassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=255)),
                ('password_confirm', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CreatePin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('cash', 'Cash Pickup')], max_length=50, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_from', models.CharField(choices=[('BWP', 'Bwp'), ('RMB', 'Rmb'), ('ETB', 'Etb'), ('GHC', 'Ghc'), ('KES', 'Kes'), ('MWK', 'Mwk'), ('NAD', 'Nad'), ('NGN', 'Ngn'), ('RWF', 'Rwf'), ('ZAR', 'Zar'), ('SSP', 'Ssp'), ('TZS', 'Tzs'), ('UGX', 'Ugx'), ('AED', 'Aed'), ('GBP', 'Gbp'), ('USD', 'Usd'), ('XAF', 'Xaf'), ('BTC', 'Btc'), ('USDT', 'Usdt'), ('USDC', 'Usdc')], max_length=10)),
                ('currency_to', models.CharField(choices=[('BWP', 'Bwp'), ('RMB', 'Rmb'), ('ETB', 'Etb'), ('GHC', 'Ghc'), ('KES', 'Kes'), ('MWK', 'Mwk'), ('NAD', 'Nad'), ('NGN', 'Ngn'), ('RWF', 'Rwf'), ('ZAR', 'Zar'), ('SSP', 'Ssp'), ('TZS', 'Tzs'), ('UGX', 'Ugx'), ('AED', 'Aed'), ('GBP', 'Gbp'), ('USD', 'Usd'), ('XAF', 'Xaf'), ('BTC', 'Btc'), ('USDT', 'Usdt'), ('USDC', 'Usdc')], max_length=10)),
                ('low_amount', models.DecimalField(blank=True, decimal_places=8, max_digits=32, null=True)),
                ('low_amount_limit', models.DecimalField(blank=True, decimal_places=19, max_digits=32, null=True)),
                ('rate', models.DecimalField(decimal_places=19, max_digits=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, verbose_name='username')),
                ('token', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Signup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Swap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_currency', models.CharField(max_length=10)),
                ('to_currency', models.CharField(max_length=10)),
                ('amount_sent', models.DecimalField(decimal_places=2, max_digits=12)),
                ('exchange_rate', models.DecimalField(decimal_places=2, max_digits=12)),
                ('converted_amount', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='TransactionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255)),
                ('beneficiary', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('processing', 'Processing'), ('successful', 'Successful'), ('failed', 'Failed')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('pin', models.CharField(blank=True, max_length=255, null=True)),
                ('pin_attempts', models.IntegerField(default=0)),
                ('pin_locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='fastest_exchange_users', related_query_name='fastest_exchange_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='fastest_exchange_users', related_query_name='fastest_exchange_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BankTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_sent', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency_from', models.CharField(default='USD', max_length=10)),
                ('amount_received', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency_to', models.CharField(default='UGX  ', max_length=10)),
                ('agent', models.CharField(blank=True, max_length=255, null=True)),
                ('receiver_account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('receiver_account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('receiver_bank', models.CharField(blank=True, max_length=255, null=True)),
                ('proof_of_payment', models.FileField(blank=True, null=True, upload_to='proofs/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('successful', 'Successful'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('bank', models.CharField(max_length=255)),
                ('account_number', models.CharField(max_length=50)),
                ('account_name', models.CharField(max_length=255)),
                ('narration', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientAccount',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city_state', models.CharField(blank=True, max_length=255, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='fastest_exchange.completesignup')),
            ],
        ),
        migrations.CreateModel(
            name='IDVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('UG', 'Uganda'), ('KE', 'Kenya'), ('TZ', 'Tanzania'), ('RW', 'Rwanda'), ('SS', 'South Sudan'), ('ZM', 'Zambia'), ('MW', 'Malawi'), ('NG', 'Nigeria'), ('GH', 'Ghana'), ('ET', 'Ethiopia'), ('ZA', 'South Africa'), ('BW', 'Botswana'), ('NA', 'Namibia'), ('ZW', 'Zimbabwe'), ('MW', 'Malawi'), ('CM', 'Cameroon'), ('CI', "Côte d'Ivoire")], max_length=50)),
                ('document_type', models.CharField(choices=[('voter_id', 'Voter ID'), ('passport', 'International Passport'), ('driver_license', "Driver's License"), ('national_id', 'National ID')], max_length=20)),
                ('id_number', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KYC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bvn_verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_number_verified', models.BooleanField(default=False)),
                ('national_identity_verified', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewer_notes', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='kyc', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IdentityDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('BVN', 'Bank Verification Number'), ('PASSPORT', 'Passport'), ('ID_CARD', 'National ID Card'), ('RESIDENT_CARD', 'Resident Card'), ('DRIVER_LICENSE', 'Driver License')], max_length=50)),
                ('document_file', models.FileField(blank=True, null=True, upload_to=fastest_exchange.models.get_kyc_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('document_number', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('kyc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='fastest_exchange.kyc')),
            ],
        ),
        migrations.CreateModel(
            name='MobileMoney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_sent', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency_from', models.CharField(default='USD', max_length=10)),
                ('amount_received', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency_to', models.CharField(default='UGX', max_length=10)),
                ('agent', models.CharField(blank=True, max_length=255, null=True)),
                ('receiver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('receiver_number', models.CharField(blank=True, max_length=50, null=True)),
                ('narration', models.TextField(blank=True, null=True)),
                ('proof_of_payment', models.FileField(blank=True, null=True, upload_to='proofs/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('successful', 'Successful'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('address', models.TextField(blank=True, max_length=200, null=True)),
                ('country', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperatingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.IntegerField(choices=[(1, 'Bank'), (2, 'Mobile Payment'), (3, 'Crypto'), (4, 'Cash')])),
                ('currency', models.CharField(choices=[('BWP', 'Bwp'), ('RMB', 'Rmb'), ('ETB', 'Etb'), ('GHC', 'Ghc'), ('KES', 'Kes'), ('MWK', 'Mwk'), ('NAD', 'Nad'), ('NGN', 'Ngn'), ('RWF', 'Rwf'), ('ZAR', 'Zar'), ('SSP', 'Ssp'), ('TZS', 'Tzs'), ('UGX', 'Ugx'), ('AED', 'Aed'), ('GBP', 'Gbp'), ('USD', 'Usd'), ('XAF', 'Xaf'), ('BTC', 'Btc'), ('USDT', 'Usdt'), ('USDC', 'Usdc')], max_length=5)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='fastest_exchange.office')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('bank', 'Bank'), ('mobile_money', 'Mobile Money'), ('crypto', 'Crypto'), ('wallet', 'Wallet')], max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('address', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('relationship', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('country', models.CharField(max_length=2)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiaries', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='beneficiaries', to='fastest_exchange.paymentmethod')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=fastest_exchange.models.get_media_upload_path)),
                ('bio', models.TextField(blank=True, null=True)),
                ('pin', models.IntegerField(blank=True, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, default=None, max_length=128, null=True, region=None)),
                ('address', models.TextField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(max_length=2)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReceiveCash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_sent', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency_from', models.CharField(default='USD', max_length=10)),
                ('amount_received', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency_to', models.CharField(default='UGX', max_length=10)),
                ('agent', models.CharField(blank=True, max_length=255, null=True)),
                ('receiver_name', models.CharField(blank=True, max_length=255, null=True)),
                ('receiver_IDnumber', models.CharField(blank=True, max_length=50, null=True)),
                ('receiver_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('narration', models.TextField(blank=True, null=True)),
                ('proof_of_payment', models.FileField(blank=True, null=True, upload_to='proofs/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('successful', 'Successful')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_code', models.CharField(max_length=20, unique=True)),
                ('commission', models.DecimalField(decimal_places=8, default=0, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PayoutDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=50)),
                ('details', models.JSONField()),
                ('swap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payout_details', to='fastest_exchange.swap')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.IntegerField(choices=[(1, 'Credit'), (2, 'Debit')])),
                ('amount', models.DecimalField(decimal_places=8, max_digits=20)),
                ('metadata', models.JSONField(default=dict)),
                ('details', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Pending'), (2, 'Fullfilled')], null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='fastest_exchange.operatingaccount')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='fastest_exchange.clientaccount')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fastest_exchange.transaction')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='fastest_exchange.transaction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('filename', models.CharField(default='transactions.csv', max_length=255)),
                ('note', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('code_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('address', models.CharField(max_length=150)),
                ('city', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=2)),
                ('receive_price_update', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(condition=models.Q(('receive_price_update', True)), fields=['receive_price_update'], name='receive_price_update_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fx_rate', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(condition=models.Q(('fx_rate', True)), fields=['fx_rate'], name='notice_fx_rate_idx')],
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('type', models.IntegerField(choices=[(1, 'Transaction'), (2, 'Client')])),
                ('object_id', models.BigIntegerField()),
                ('data', models.JSONField()),
                ('is_active', models.BooleanField(default=False)),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_accepted_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('type', 'object_id'), name='unique_request')],
            },
        ),
    ]
